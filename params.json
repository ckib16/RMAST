{
  "name": "RMAST",
  "tagline": "A standardized keymap for RubyMine, Atom or Sublime Text (RMAST)",
  "body": "#RubyMine Atom Sublime Text (RMAST)\r\nI love me some RubyMine. But I didn't want to give up the great key bindings from Atom and Sublime Text. So I started looking for resources that could help me bridge the three editors. This RMAST (\"R Mast \") repo is the result.      \r\n  \r\n- I added the best Atom and Sublime Text 3 (ST3) key bindings to the RubyMine (RM) key map. \r\n- I made a cheatsheet to help drill them into my head\r\n\r\n##Why\r\n- RubyMine is great. But being able to jump to ST3 or Atom is very handy and avoids letting one editor \"lock you in\"\r\n- ST3 is the \"industry leader\" with nice key mappings and multiple cursor option. Atom has followed the ST3 lead with most key bindings.\r\n- I wanted to practice on one keymap that works well on all three editors. And I needed a cheat-sheet to help me practice the most useful editor key bindings.\r\n\r\n\r\n##Notes\r\n- `/` is used in the chart below to separate similar commands, it is not meant to be typed\r\n- Where conflicts occurred when adding a new binding, the default RubyMine key binding was removed to prevent future errors & unintended actions\r\n-  Some of the key mappings - such as the RubyMine editor pane management command 'Split Vertically' - are not a direct mapping of ST3 or Atom. But they are the closest RM comes to the same intent (in my opinion)\r\n\r\n---\r\n\r\n##Search & Navigation\r\n\r\n| **RM Keymapping** | **RM Action Name** | **Re-map?** | **Standard RM?** | **Notes** |\r\n| --- | --- | --- | --- | --- |\r\n| ⇧\\*2  (Double Shift) | 'Search Everywhere' |   | X | Similar to combination of ST3 ⌘⇧P + ⌘P |\r\n| ⌘⇧P | 'Find Action' | X |   | Mimic ST3: \"Command  Palette\" |\r\n| ⌘P | 'File' | X |   | Mimic ST3: \"Goto Anything\" |\r\n| ⌘E | 'Recent Files' |   | X | Search recent files, better than the default \"switcher\" |\r\n| ⌘⇧F | 'Find in Path' |   | X | Find in project |\r\n| ⌘⇧V | 'Paste from History' |   | X | Search & paste from clipboard history |\r\n| ⌘B | 'Declaration' |   | X | Go to declaration of method |\r\n| ⌘Y | 'Quick Definition' |   | X | \"Peek\" quickly at declaration definition with pop-up |\r\n| ⌥- Enter | 'Show Intention Actions' |   | X | Show the \"lightbulb\" options (\"intention actions\") |\r\n| ⌥⌘T | 'Surround With' |   | X | Surround a block of code. Ex. \"If…Then…Else\" |\r\n\r\n##Tool Windows\r\n| **RM Keymapping** | **RM Action Name** | **Re-map?** | **Standard RM?** | **Notes** |\r\n| --- | --- | --- | --- | --- |\r\n| ⌘`  | View > 'Tool Buttons' | X |  | Adds toggles for \"Tool Windows\" tool bar on screen edges |\r\n| ⌘8  | Other > 'Database' | X |  | Adds toggle for \"Database\" tool window |\r\n| ⌘0  | Other > 'Terminal' | X |  | Adds toggle for \"Terminal\" tool window |\r\n\r\n##Tabs & Panels\r\n\r\n| **RM Keymapping** | **RM Action Name** | **Re-map?** | **Standard RM?** | **Notes** |\r\n| --- | --- | --- | --- | --- |\r\n| ⌘⌃← / → | 'Select Next/Previous Tab' | X |   | Mimic Chrome; 2 modifiers = cycle between tabs in current column (\"splitters\" in RM terms) |\r\n| ⌘⌥⌃↑ | 'Split Vertically' Editor Tabs | X |   | Personal choice - All 3 modifiers= add/drop/change columns (\"splitters\" in RM terms) |\r\n| ⌘⌥⌃↓ |  'Unsplit' Editor Tabs | X |   | '' |\r\n| ⌘⌥⌃←/→ | 'Move to Opposite Group' | X |   | Personal Choice - Moves the tab to a different column (\"splitters\" in RM terms) |\r\n| ⌥Tab | 'Goto to Next Splitter' |   | X | Switches cursor focus between columns (\"splitters\" in RM terms) - ST3 binging of ⌘K or ⌘← / → was unreliable for me due to other Mac bindings; Atom has no standard key mapping |\r\n\r\n##Edit Lines / Text\r\n\r\n| **RM Keymapping** | **RM Action Name** | **Re-map?** | **Standard RM?** | **Notes** |\r\n| --- | --- | --- | --- | --- |\r\n| ⌘] / [ | 'Indent' / 'Unindent Line or Selection' | X |   | Mimic ST3 |\r\n| ⌃⌘↑ / ↓ | 'Move Line Up/Down' | X |   | Mimic ST3 |\r\n| ⇧⌘D | 'Duplicate Line' | X |   | Mimic ST3 |\r\n| ⌃⇧K | 'Delete Line' | X |   | Mimic ST3 |\r\n| ⌘J | 'Join Lines | X |   | Mimic ST3 - brings up the line below & adds to end of current line |\r\n| ⌥⌘L | 'Reformat  Code' |   | X | 'Reformats' or 'prettfies' code based on syntax settings: aligns hashes, brackets etc. |\r\n\r\n##Selections & Multi-Cursor\r\n\r\n| **RM Keymapping** | **RM Action Name** | **Re-map?** | **Standard RM?** | **Notes** |\r\n| --- | --- | --- | --- | --- |\r\n| ⌘D | 'Add selection for next occurrence' | X |   | Mimic ST3 |\r\n| ⌃⌘G | 'Select all occurrences' | X |   | Mimic ST3 |\r\n| ⌘L | 'Select Line at Caret' | X |   | Mimic ST3 |\r\n| ⌃⇧↑ / ↓ | 'Clone Caret Above' / 'Below' | X |   | Mimic ST3 |\r\n| ⌘ Left Click | 'Add or Remove Caret' w/ mouse | X |   | Mimic ST3 |\r\n\r\n---\r\n\r\n## Setup\r\n### Requirements\r\n[RubyMine](https://www.jetbrains.com/ruby/)\r\n\r\n### Importing Settings (Installing Keymaps)\r\n1. Download the .jar folder \r\n\t- Or...if you want to know exactly what you are downloading - download all other individual folders EXCEPT for the .jar folder. Then zip them & turn them into your own .jar folder (see \"notes on .jar files\" below).\r\n2. Go to File > Import Settings and specify the directory where the `rubymine_atom_sublimetext_RMAST.jar` lives. \r\n3. Click on \"Keymaps\" and click `OK`.\r\n4. Restart RubyMine\r\n5. Go to Preferences > Keymap > Keymaps and select the new keymap `RMAST`\r\n\r\n### Exporting Settings\r\n1. RubyMine > File > Export Settings...\r\n2. You can just chose \"Keymaps\" for the export, or select all\r\n3. RubyMine will export a .jar file filled with your setttings\r\n\r\n### Notes on .jar files\r\nI'm not an expert in Java, but here's what I've learned\r\n\r\nMac:  \r\n- You can safely turn `.jar` files into `.zip` files (and back again) just by changing the file extension  \r\n- This allows you to examine the contents of the `.jar` file\r\n\r\n## Contributing\r\n\r\n### Questions, Feedback\r\nPlease post questions or feedback in an [Issue](https://github.com/ckib16/rubymine_atom_sublimetext_RMAST/issues).\r\n\r\n\r\n### Contributing\r\nIf you have a new keybinding you think might fit the spirit of this repo:\r\n1. Submit your proposed key binding as an \"Issue\"\r\n2. If I like the binding I'll add it and post a new settings file\r\n3. If not, feel free to fork, modify and set-up your own keymap!\r\n\r\n---\r\n\r\n##Other RubyMine Stuff\r\n### Disable Case Sensitivity\r\n- RubyMine uses first letter case sensitivity per default. This means that if you type e, Exception won't be offered as a viable completion. This is why I disable case sensitivity completion.    \r\n    - `Editor > General > Code Completion > Case Sensitive completion : NONE`  \r\n\t- [http://saqibrazaq.com/RubyMine-basic-configuration/](http://saqibrazaq.com/RubyMine-basic-configuration/)\r\n\r\n### Theme changes: RM's Monokai theme w/ Darkula background\r\n- Changed comments to gray\r\n- Changed editor gutter to gray\r\n- Changed font size to 14\r\n- Changed line height to 1.2\r\n- This is included in the settings above under `Colors` named `Monokai - RMAST`\r\n\r\n###Helpful Plugins\r\n| Plugin |  Description |\r\n| --- | --- |\r\n| Markdown |  markdown support and preview pane |\r\n| Wrap to Column | forces soft wraps at column width, doesn't apply to text already there, just new text & when text is reformatted |\r\n| Railways |  shows quick rake routes display as a side panel |\r\n| Dash | ⌘⇧D for Dash documentation |\r\n\r\n---\r\n## About Me\r\n* [Page](http://chriskibble.net)\r\n* [Github](https://github.com/ckib16)\r\n\r\nInspired by [@leopku](https://github.com/leopku/rubymine-keymap-sublime)\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}